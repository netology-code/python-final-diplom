name:
  Django Testing and Deploy

on:
  # opening a pull request to master and develop branch will be a trigger
  pull_request:
    branches:
      - develop
      - master
  # any code pushed to master and develop branch will also be a trigger
  push:
    branches:
      - master
      - develop

jobs:
  health-check-job: # health check job for testing and code formatting check
    runs-on: ubuntu-latest # os for running the job
    services:
      postgres: # we need a postgres docker image to be booted a side car service to run the tests that needs a db
        image: postgres
        env: # the environment variable must match with app/settings.py if block of DATBASES variable otherwise test will fail due to connectivity issue.
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github-actions
          ALLOWED_HOSTS: "*"
        ports:
          - 5432:5432 # exposing 5432 port for application to use
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code # checking our the code at current commit that triggers the workflow
        uses: actions/checkout@v2
      - name: Cache dependency # caching dependency will make our build faster.
        uses: actions/cache@v2 # for more info checkout pip section documentation at https://github.com/actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup python environment # setting python environment to 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' # if you want multiple python version run just use matrix strategy in job config. See the documentation of GitHub Actions
      - name: Check Python version # checking the python version to see if 3.x is installed.
        run: python --version
      - name: Install requirements # install application requirements
        run: pip install -r requirements.txt
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DEBUG: false
#          envkey_SECRET_KEY: "wfv4wv+n19$qk5=65=#m)=5wm#7ox^ouicfj@g2(a3mf)z$h*0"
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          envkey_ALLOWED_HOSTS: "*"
          directory: .
          file_name: .env
          fail_on_empty: false

      - name: check enviroment file
        run:
          cat .env

      - name: Run Migrations # run migrations to create table in side car db container
        run: python manage.py migrate
      - name: Run Test # running tests
        run: pytest

